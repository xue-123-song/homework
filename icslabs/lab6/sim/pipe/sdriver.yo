                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4b002000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f60802000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7d801000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Name: Songtao Xue ID: 520030910034
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Loop header
0x032: 6300                 | 	xorq %rax,%rax		# count = 0;
0x034: c0f2fcffffffffffffff | 	iaddq $-4,%rdx
0x03e: 6222                 | 	andq %rdx,%rdx
0x040: 721401000000000000   | 	jl remain
                            | 
0x049:                      | Loop:
0x049: 50a70000000000000000 |     mrmovq (%rdi),%r10
0x053: 50b70800000000000000 | 	mrmovq 8(%rdi),%r11
0x05d: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x067: 62aa                 | 	andq %r10,%r10
0x069: 717c00000000000000   | 	jle lNpos1
0x072: c0f00100000000000000 | 	iaddq $1,%rax
0x07c:                      | lNpos1:
0x07c: 40b60800000000000000 |     rmmovq %r11,8(%rsi)
0x086: 62bb                 | 	andq %r11,%r11
0x088: 719b00000000000000   | 	jle lNpos2
0x091: c0f00100000000000000 | 	iaddq $1,%rax
0x09b:                      | lNpos2:
0x09b: 50a71000000000000000 |     mrmovq 16(%rdi),%r10
0x0a5: 50b71800000000000000 | 	mrmovq 24(%rdi),%r11
0x0af: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x0b9: 62aa                 | 	andq %r10,%r10
0x0bb: 71ce00000000000000   | 	jle lNpos3
0x0c4: c0f00100000000000000 | 	iaddq $1,%rax
0x0ce:                      | lNpos3:
0x0ce: 40b61800000000000000 |     rmmovq %r11,24(%rsi)
0x0d8: 62bb                 | 	andq %r11,%r11
0x0da: 71ed00000000000000   | 	jle next
0x0e3: c0f00100000000000000 | 	iaddq $1,%rax
0x0ed:                      | next:
0x0ed: c0f72000000000000000 |     iaddq $32,%rdi
0x0f7: c0f62000000000000000 | 	iaddq $32,%rsi
0x101: c0f2fcffffffffffffff | 	iaddq $-4,%rdx
0x10b: 754900000000000000   | 	jge Loop
                            |      
0x114:                      | remain:
0x114: c0f20400000000000000 |     iaddq $4,%rdx #restore len
0x11e: c0f2ffffffffffffffff | 	iaddq $-1,%rdx
0x128: 72d201000000000000   | 	jl Done
0x131: 50a70000000000000000 | 	mrmovq (%rdi),%r10
0x13b: 50b70800000000000000 | 	mrmovq 8(%rdi),%r11
0x145: 40a60000000000000000 | 	rmmovq %r10,(%rsi)
0x14f: 62aa                 | 	andq %r10,%r10
0x151: 716401000000000000   | 	jle rNpos1
0x15a: c0f00100000000000000 | 	iaddq $1,%rax
0x164:                      | rNpos1:
0x164: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x16e: 72d201000000000000   | 	jl Done
0x177: 40b60800000000000000 | 	rmmovq %r11,8(%rsi)
0x181: 62bb                 | 	andq %r11,%r11
0x183: 719601000000000000   | 	jle rNops2
0x18c: c0f00100000000000000 | 	iaddq $1,%rax
0x196:                      | rNops2:
0x196: c0f2ffffffffffffffff |     iaddq $-1,%rdx
0x1a0: 72d201000000000000   | 	jl Done
0x1a9: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x1b3: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x1bd: 62aa                 | 	andq %r10,%r10
0x1bf: 71d201000000000000   |     jle Done
0x1c8: c0f00100000000000000 | 	iaddq $1,%rax
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x1d2:                      | Done:
0x1d2: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x1d3:                      | End:
                            | #/* $end ncopy-ys */
0x1d3:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x1d8:                      | 	.align 8
0x1d8:                      | src:
0x1d8: ffffffffffffffff     | 	.quad -1
0x1e0: 0200000000000000     | 	.quad 2
0x1e8: 0300000000000000     | 	.quad 3
0x1f0: fcffffffffffffff     | 	.quad -4
0x1f8: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x200:                      | 	.align 16
0x200:                      | Predest:
0x200: fadebc0000000000     | 	.quad 0xbcdefa
0x208:                      | dest:
0x208: abefcd0000000000     | 	.quad 0xcdefab
0x210: abefcd0000000000     | 	.quad 0xcdefab
0x218: abefcd0000000000     | 	.quad 0xcdefab
0x220: abefcd0000000000     | 	.quad 0xcdefab
0x228:                      | Postdest:
0x228: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x230:                      | .align 8
                            | # Run time stack
0x230: 0000000000000000     | 	.quad 0
0x238: 0000000000000000     | 	.quad 0
0x240: 0000000000000000     | 	.quad 0
0x248: 0000000000000000     | 	.quad 0
0x250: 0000000000000000     | 	.quad 0
0x258: 0000000000000000     | 	.quad 0
0x260: 0000000000000000     | 	.quad 0
0x268: 0000000000000000     | 	.quad 0
0x270: 0000000000000000     | 	.quad 0
0x278: 0000000000000000     | 	.quad 0
0x280: 0000000000000000     | 	.quad 0
0x288: 0000000000000000     | 	.quad 0
0x290: 0000000000000000     | 	.quad 0
0x298: 0000000000000000     | 	.quad 0
0x2a0: 0000000000000000     | 	.quad 0
0x2a8: 0000000000000000     | 	.quad 0
                            | 
0x2b0:                      | Stack:
