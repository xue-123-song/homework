                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | # Name: Songtao Xue ID: 520030910034
                            | # Describe how and why you modified the baseline code.
                            | # 1. use iaddq instruction to cut down the number of instruction
                            | # 2. add instruction between mrmovq and rmmovq to eliminate load/use hazard
                            | # 3. use loop unrolling to reduce cycle overhead
                            | # 4. iaddq also set CC, use iaddq rather than andq to judge
                            | 
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x000:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | # Loop header
0x000: 6300                 | 	xorq %rax,%rax		# count = 0;
0x002: c0f2f8ffffffffffffff | 	iaddq $-8,%rdx
0x00c: 728401000000000000   | 	jl Judge1
                            | 
0x015:                      | Loop:
0x015: 50870000000000000000 |     mrmovq (%rdi),%r8
0x01f: 50970800000000000000 | 	mrmovq 8(%rdi),%r9
0x029: 50a71000000000000000 | 	mrmovq 16(%rdi),%r10
0x033: 50b71800000000000000 | 	mrmovq 24(%rdi),%r11
0x03d: 50c72000000000000000 | 	mrmovq 32(%rdi),%r12
0x047: 50d72800000000000000 | 	mrmovq 40(%rdi),%r13
0x051: 50e73000000000000000 | 	mrmovq 48(%rdi),%r14
0x05b: 50173800000000000000 | 	mrmovq 56(%rdi),%rcx
0x065: 40860000000000000000 | 	rmmovq %r8,(%rsi)
0x06f: 40960800000000000000 | 	rmmovq %r9,8(%rsi)
0x079: 40a61000000000000000 | 	rmmovq %r10,16(%rsi)
0x083: 40b61800000000000000 | 	rmmovq %r11,24(%rsi)
0x08d: 40c62000000000000000 | 	rmmovq %r12,32(%rsi)
0x097: 40d62800000000000000 | 	rmmovq %r13,40(%rsi)
0x0a1: 40e63000000000000000 | 	rmmovq %r14,48(%rsi)
0x0ab: 40163800000000000000 | 	rmmovq %rcx,56(%rsi)
0x0b5: 6288                 | 	andq %r8,%r8
0x0b7: 71ca00000000000000   | 	jle lNpos1
0x0c0: c0f00100000000000000 | 	iaddq $1,%rax
0x0ca:                      | lNpos1:
0x0ca: 6299                 | 	andq %r9,%r9
0x0cc: 71df00000000000000   | 	jle lNpos2
0x0d5: c0f00100000000000000 | 	iaddq $1,%rax
0x0df:                      | lNpos2:
0x0df: 62aa                 | 	andq %r10,%r10
0x0e1: 71f400000000000000   | 	jle lNpos3
0x0ea: c0f00100000000000000 | 	iaddq $1,%rax
0x0f4:                      | lNpos3:
0x0f4: 62bb                 | 	andq %r11,%r11
0x0f6: 710901000000000000   | 	jle lNpos4
0x0ff: c0f00100000000000000 | 	iaddq $1,%rax
0x109:                      | lNpos4:
0x109: 62cc                 |     andq %r12,%r12
0x10b: 711e01000000000000   | 	jle lNpos5
0x114: c0f00100000000000000 | 	iaddq $1,%rax
0x11e:                      | lNpos5:
0x11e: 62dd                 |     andq %r13,%r13
0x120: 713301000000000000   | 	jle lNpos6
0x129: c0f00100000000000000 | 	iaddq $1,%rax
0x133:                      | lNpos6:
0x133: 62ee                 |     andq %r14,%r14
0x135: 714801000000000000   | 	jle lNpos7
0x13e: c0f00100000000000000 | 	iaddq $1,%rax
0x148:                      | lNpos7:
0x148: 6211                 |     andq %rcx,%rcx
0x14a: 715d01000000000000   | 	jle next
0x153: c0f00100000000000000 | 	iaddq $1,%rax
0x15d:                      | next:
0x15d: c0f74000000000000000 |     iaddq $64,%rdi
0x167: c0f64000000000000000 | 	iaddq $64,%rsi
0x171: c0f2f8ffffffffffffff | 	iaddq $-8,%rdx
0x17b: 751500000000000000   | 	jge Loop
                            |      
0x184:                      | Judge1:
0x184: c0f20400000000000000 |     iaddq $4,%rdx 
0x18e: 75be01000000000000   | 	jge remain1
0x197:                      | Judge2:
0x197: c0f20200000000000000 |     iaddq $2,%rdx
0x1a1: 758902000000000000   | 	jge remain2
0x1aa:                      | Judge3:
0x1aa: c0f20100000000000000 |     iaddq $1,%rdx
0x1b4: 750203000000000000   | 	jge remain3
0x1bd: 90                   | 	ret
0x1be:                      | remain1:
0x1be: 50870000000000000000 |     mrmovq (%rdi),%r8
0x1c8: 50970800000000000000 |     mrmovq 8(%rdi),%r9
0x1d2: 50a71000000000000000 |     mrmovq 16(%rdi),%r10
0x1dc: 50b71800000000000000 |     mrmovq 24(%rdi),%r11
0x1e6: 40860000000000000000 |     rmmovq %r8,(%rsi)
0x1f0: 40960800000000000000 |     rmmovq %r9,8(%rsi)
0x1fa: 40a61000000000000000 |     rmmovq %r10,16(%rsi)
0x204: 40b61800000000000000 |     rmmovq %r11,24(%rsi)
0x20e: 6288                 | 	andq %r8,%r8
0x210: 712302000000000000   | 	jle rNpos1
0x219: c0f00100000000000000 | 	iaddq $1,%rax
0x223:                      | rNpos1:
0x223: 6299                 | 	andq %r9,%r9
0x225: 713802000000000000   | 	jle rNops2
0x22e: c0f00100000000000000 | 	iaddq $1,%rax
0x238:                      | rNops2:
0x238: 62aa                 | 	andq %r10,%r10
0x23a: 714d02000000000000   |     jle rNops3
0x243: c0f00100000000000000 | 	iaddq $1,%rax
0x24d:                      | rNops3:
0x24d: 62bb                 | 	andq %r11,%r11
0x24f: 716202000000000000   |     jle rNops4
0x258: c0f00100000000000000 | 	iaddq $1,%rax
0x262:                      | rNops4:
0x262: c0f72000000000000000 |     iaddq $32,%rdi
0x26c: c0f62000000000000000 | 	iaddq $32,%rsi
0x276: c0f2fcffffffffffffff | 	iaddq $-4,%rdx
0x280: 709701000000000000   | 	jmp Judge2
                            | 
0x289:                      | remain2:
0x289: 50870000000000000000 |     mrmovq (%rdi),%r8
0x293: 50970800000000000000 |     mrmovq 8(%rdi),%r9
0x29d: 40860000000000000000 |     rmmovq %r8,(%rsi)
0x2a7: 40960800000000000000 |     rmmovq %r9,8(%rsi)
0x2b1: 6288                 | 	andq %r8,%r8
0x2b3: 71c602000000000000   | 	jle rNpos5
0x2bc: c0f00100000000000000 |     iaddq $1,%rax
0x2c6:                      | rNpos5:
0x2c6: 6299                 |     andq %r9,%r9
0x2c8: 71db02000000000000   | 	jle rNpos6
0x2d1: c0f00100000000000000 | 	iaddq $1,%rax
0x2db:                      | rNpos6:
0x2db: c0f71000000000000000 |     iaddq $16,%rdi
0x2e5: c0f61000000000000000 | 	iaddq $16,%rsi
0x2ef: c0f2feffffffffffffff | 	iaddq $-2,%rdx
0x2f9: 70aa01000000000000   | 	jmp Judge3
                            | 
0x302:                      | remain3:
0x302: 50870000000000000000 |     mrmovq (%rdi),%r8
0x30c: 6288                 |     andq %r8,%r8
0x30e: 40860000000000000000 |     rmmovq %r8,(%rsi)
0x318: 712b03000000000000   |     jle rNpos7
0x321: c0f00100000000000000 |     iaddq $1,%rax
0x32b:                      | rNpos7:
0x32b: 90                   |     ret
                            | 
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x32c:                      | Done:
0x32c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x32d:                      | End:
                            | #/* $end ncopy-ys */
